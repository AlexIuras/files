openapi: 3.0.1
info:
  title: Verbünde
  description: >

    # Beschreibung
    
    Informationen bezüglich der Verbünde(Associations) sollen von OSP gelesen und nach OSP geschrieben werden.
    
    ## Backendsystem
    
    OneSystem Plus (OSP)

    # Rahmenbedingungen
    
    Welche Rahmenbedingungen sind zu beachten, damit der Service genutzt werden kann, insbesondere
      - Rechte: Der aufrufende User muss in ESBConfig die Berechtigung zum Aufruf von Service 'DynsBA'/Domäne OSP besitzen. 
        Zur Abfrage von Daten zu Mitarbeitern (Organkennzeichen gesetzt) benötigt der zugeordnete SUSer das Privileg 'MITARBEITER' und 'VERBUND-Anlegen'. 
        Falls das Zugriffsschutz-Kennzeichen einer gesuchten Personen gesetzt ist
        (ZUGRIFFSSCHUTZ_KZ = 'J' ), benötigt der Anwender das Privileg 'ZUGRIFF-PERS'.
      - Verfügbarkeitszeiten: Wann ist der Service verfügbar?
      - Offene Detailpunkte:
      - Rechte: Im Zielzustand sollte mit der Vergabe des Rechts zur Nutzung des Service auch alle darunterliegenden Rechte, die erforderlich sind, angelegt werden (Service-Gedanke)
      - Serviceparameter: weitergehende Regelungen wie Quotas etc. sind nicht Teil der Swagger-Dokumentation, sondern Parameter im API-Gateway, werden dort gepflegt und publiziert

    # Domäne/Subdomäne
      - Der Service ist der fachlichen Domäne 'PERSON' zugeordnet.
      - Die Informationen werden aus den OSP Prozessgruppen 'VERBUND' bezogen.

    # IT-System(-nummer)
      - Welchem IT-System ist der Service zugeordnet.
      - Der Service erbt von dem IT-System einige wesentliche Eigenschaften, insbesondere die Ownerschaften und das Schutz-Niveau, das der Service bietet.
      - Bei Composite Services über mehrere Systeme gibt i.d.R. ein System, das führend ist (Einstiegspunkt). Der Service wird diesem System zugeordnet.
      
    # Offene Detailpunkte
      - Welche Eigenschaften erbt der Service von dem System?
      - Werden diese Eigenschaften beim Service im API-Verzeichnis mit publiziert (Komfort) und/oder das IT-System verlinkt.
      - Wird die Systemnummer publiziert?
      - Sollte es eine eigene Domäne 'Verbünde' geben ?

    # Schutzniveau
    
    Schutz-Niveau des IT-Systems oder geringer
    
    # Release-Notes
      - 2020-09-09 v0.0.1  Erster Entwurf der Operationen und Modellen.
      - 2020-09-17 v0.0.2  Anpassungen nach dem ersten technischen Review.
      - 2020-10-12 v1.0.0  Verbund löschen und Person aus Verbund löschen aufgenommen.
      - 2020-10-26 v1.0.0  Umstrukturierung der Operationen Kunde aus Verbund löschen bzw. ins Verbund aufnehmen.

    # Status
    
        Version v1.0.0 2020-10-26  Umstrukturierung der Operationen Kunde aus Verbund löschen bzw. ins Verbund aufnehmen.
  version: v1.0.0
  termsOfService: /agb
  contact:
    name: Nicholas Trawniczek
    url: 'http://api.lbbw.de'
    email: Nicholas.Trawniczek@lbbw.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-keywords: >-
    Verbund, Verbunde, Verbünde, Verbundmerkmale, Person, Personen, KYC
  x-logo:
    altText: OSPlus logo
    url: 'assets/img/osplus.png'
servers:
  - url: 'http://api.bp.entw.bank.lbbw.sko.de/customer/association-service/'
    description: API-Verzeichnis
  - url: 'http://esb.bp.entw.bank.lbbw.sko.de/customer/association-service/'
    description: ESB-Service Integrationsumgebung
externalDocs:
  description: Diese Dokumentation basiert auf der Open Api Specification V3.
  url: 'https://github.com/OAI/OpenAPI-Specification'
tags:
  - name: association_models
    x-displayName: Verbund
    description: |
        Datenmodell eines Verbunds
        <SchemaDefinition schemaRef="#/components/schemas/Association" showReadOnly={true} showWriteOnly={true} />
        
        Datenmodell zum Erstellen eines Verbunds
        <SchemaDefinition schemaRef="#/components/schemas/CreateAssociationRequest" showReadOnly={true} showWriteOnly={true} />
        
        Datenmodell zum Ändern eines Verbunds
        <SchemaDefinition schemaRef="#/components/schemas/UpdateAssociationRequest" showReadOnly={true} showWriteOnly={true} />            
  - name: health_model
    x-displayName: Health
    description: |
       <SchemaDefinition schemaRef="#/components/schemas/HealthOkResponse" showReadOnly={true} showWriteOnly={true} />
       <SchemaDefinition schemaRef="#/components/schemas/HealthErrorResponse" showReadOnly={true} showWriteOnly={true} />
x-tagGroups:
  - name: Verbünde
    tags:
      - associations
  - name: Health-Check
    tags:
      - health
  - name: Datenmodelle
    tags:
      - association_models
      - health_model
security:
  - EsbAuthorization: []
    appId: []

paths:    
  /associations:
    get:
      operationId: getAssociationsByCustomerId
      tags: [associations]
      summary: Abrufen aller Verbünde eines Kunden.
      description: >-
        Alle Verbünde, in der eine Person eine Rolle hat, sind auszugeben. Wenn show_only_legal_form_association true dann nur Rechstformverbund wird angezeigt.
      parameters:
        - name: customer_id
          in: query
          description: Personennummer.
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
        - name: show_only_legal_form_association
          in: query
          description: >- 
            Ausgelesen wird nur das Verbund indem die Person nach der Rechtsform der Person diese der Verbundführer ist, alle Verbundmitglieder werden auch angezeigt.
          required: true
          schema:
            $ref: '#/components/schemas/Boolean_param'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetAssociationsByCustIdResponse'
        '204':
          description: Customer not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createAssociation
      tags: [associations]
      summary: Ein neuer Verbund mit Personen wird angelegt, die neue Verbund-ID wird zurück gemeldet.
      description: >-
        Alle Personen, die zu einem Verbund gehören, sind mit ihrer Rolle dem Verbund zuzuordnen. 
        DynS-Funktion: VERBUND_PERSONEN_ANLEGEN
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateAssociationRequest'
      responses:
        '201':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateAssociationResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /associations/{association_id}:
    get:
      operationId: getAssociationById
      tags: [associations]
      summary: Abrufen aller Personen eines Verbunds.
      description: >- 
        Alle Personen, die zu einem Verbund gehören, sind auszugeben. 
        Fachliche Beschreibung:
        Der Prozess stellt Informationen zu einem Personenverbund sowie den ihm 
        angehörenden Personen zu einem bestimmten Zeitpunkt oder in einem bestimmten
        Zeitraum zur Verfügung.
        Die KWG-Verbünde werden über diesen Prozess nicht angezeigt.
        Die Ergebnisse werden sortiert nach den Parametern
        NAME, VORNAME, PERS_NR, VON und PARTNER_ZEILE.
        Über den Parameter PERS_ART_ASWL kann die Menge der angezeigten Personen
        auf Personen bestimmter PERS_Arten eingeschränkt oder erweitert werden.
        Standard ist "PNJGA". Die Erweiterung betrifft die Personenarten "H"
        und "I".
      parameters:
        - name: association_id
          in: path
          description: Verbund-ID Base64 encodiertes Timestamp.
          required: true
          schema:
            $ref: '#/components/schemas/Association_id'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetAssociationResponse'
        '204':
          description: Association not found
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteAssociation
      tags: [associations]
      summary: Ein bestehendes Verbund soll gelöscht, aufgelöst, werden.
      description: >-
        DynS-Funktion: VERBUND_PERSONEN_LOESCHEN. Ein bestehendes Verbund soll aufgelöst bzw. gelöscht werden.
      parameters:
        - name: association_id
          in: path
          description: Verbund-ID Base64 encodiertes Timestamp.
          required: true
          schema:
            $ref: '#/components/schemas/Association_id'
      responses:
        '204':
          description: No Content
          content: {}
  /associations/{association_id}/customers:
    post:
      operationId: addCustomerToAssociation
      tags: [associations]
      summary: Eine weitere Person soll in einen bestehenden Verbund aufgenommen.
      description: >-
        Eine Person ist mit ihrer Rolle dem Verbund zuzuordnen. 
        DynS-Funktion: PERSONEN_ZU_VERBUND_HINZUF
      parameters:
        - name: association_id
          in: path
          description: >-
            Verbund-ID Base64 encodiertes Timestamp.
          required: true
          schema:
            $ref: '#/components/schemas/Association_id'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateAssociationRequest'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateAssociationResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /associations/{association_id}/customers/{customer_id}:
    delete:
      operationId: deleteCustomerFromAssociation
      tags: [associations]
      summary: Ein Kunde in einer bestimmten Rolle soll aus dem Verbund entfernt werden.
      description: >-
        Eine Person ist mit ihrer Rolle aus dem Verbund zu entfernen. 
        DynS-Funktion: VERBUND_PERSONEN_LOESCHEN.
      parameters:
        - name: association_id
          in: path
          description: Verbund-ID Base64 encodiertes Timestamp.
          required: true
          schema:
            $ref: '#/components/schemas/Association_id'
        - name: customer_id
          in: path
          description: >- 
            Die Kundennummer die aus dem Verbund entfernt werden soll.
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
        - name: customer_role
          in: query
          description: >- 
            Die Kundenrolle die aus dem Verbund entfernt werden soll.
          required: true
          schema:
            $ref: '#/components/schemas/Role'
      responses:
        '204':
          description: No Content
          content: {}
  /health:
    get:
      security: []
      tags: [health]
      summary: Allgemeiner Healthcheck.
      description: >-
        Dieser muss ohne Autorisierung aufrufbar sein. Die Minimalanforderung ist ein {status: 'UP'} 
        wenn der Service gerufen werden kann.
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthOkResponse"
              example:
                status: "UP"
        '503':
          description: Error - Meldung nur möglich, wenn Prüfung ausserhalb des Service erfolgt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthErrorResponse'
              example:
                status: "OUT_OF_SERVICE"
components:
  schemas:
# Personen zu Verbund lesen
    GetAssociationResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Association'
# Verbünde zu Person lesen:
    GetAssociationsByCustIdResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Associations'
    Associations:
      description: Liste von Verbünden.
      required:
      - associations
      properties:
        associations:
          type: array
          minItems: 0
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Association'
        message_text:
          $ref: '#/components/schemas/Message_text'
          #example:
          #  - customer_id: 630188
          #    role: GBR
          #  - customer_id: 17
          #    role: EIGENTÜMER
# Verbund anlegen:   
    CreateAssociationRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Association'
    CreateAssociationResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Association'
    Association:
      type: object
      description: Verbund von Kunden.
      required:
      - type
      - attributes
      properties:
        id:
          $ref: '#/components/schemas/Association_id'
        type:
          type: string
          description: Objekt Type
          example: associations
          enum:
            - associations
        attributes:
          type: object
          required:
          - association_type
          - customers
          properties:
            type:
              type: string
              example: 'TYPE_1'
              description: >- 
               Verbundart. Zusammenfassung mehrerer Rollen. Eine Rolle kann nur einer Rollenart zugeordnet werden. 
               Die Verbundart wird über den Inputparameter ROLLENART festgelegt.
            role:
              type: string
              maxLength: 12
              description: >- 
                ROLLE. Eintrag in der Partnertabelle kennzeichnet 
                a) Rolle der Person i.S. DBGK oder 
                b) Existenz bestimmter Informations-Objekte (Anschrift, Statistikdaten etc.) in der Personen-DB.
            note:
              type: string
              example: 'note_text'
              description: >- 
               TEXT_PARTNER. Lt. fachlicher Beschreibung des DynS-Prozesses kann ein Merkmal zu einer Verbundrolle über den optionalen 
               Parameter TEXT_PARTNER erfasst werden.
            customers:
              $ref: '#/components/schemas/Customers'
        message_text:
          $ref: '#/components/schemas/Message_text'
        links:
          type: object
          properties:
            self: 
              type: string
              example: 'http://api.bp.entw.bank.lbbw.sko.de/customer/association-service/associations/MTkyNi0wNC0xNC0xMi4yMy40MS4xMDc2MTc'
# Verbund erweitern/verkleinern:   
    UpdateAssociationRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Association'
    UpdateAssociationResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Association'
# Hilfs-Modelle:
    Association_id:
      type: string
      description: >-
        Verbund_ID. Eindeutige Identifizierung eines Verbundes. ID-Timestamp des Verbundes in Base64.
      maxLength: 26
      example: MTkyNi0wNC0xNC0xMi4yMy40MS4xMDc2MTc
    Customer:
      description: Person/Kunde aus der Sicht eines Verbundes.
      required:
      - id
      - role
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        role:
          type: string
          maxLength: 12
          description: >- 
            ROLLE. Personen Rolleninformationen. Eintrag in der Partnertabelle kennzeichnet 
            a) Rolle der Person i.S. DBGK oder 
            b) Existenz bestimmter Informations-Objekte (Anschrift, Statistikdaten etc.) in der Personen-DB.
        note:
          type: string
          example: 'note_text'
          description: >- 
            TEXT_PARTNER. Lt. fachlicher Beschreibung des DynS-Prozesses kann ein Merkmal zu einer Verbundrolle über den optionalen 
            Parameter TEXT_PARTNER erfasst werden.
    Customers:
      type: array
      minItems: 0
      maxItems: 50
      uniqueItems: true
      items:
        $ref: '#/components/schemas/Customer'
      example:
        - id: 630188
          role: GBR
        - id: 17
          role: EIGENTÜMER
    CustomerId:
      type: string
      description: >-
        KUSA. Eindeutiger Schlüssel des Kunden.
      maxLength: 10
      pattern: '\d{1,10}'
      example: '630188'
    Role:
      type: string
      maxLength: 12
      example: 'EIGENTÜMER'
      description: >- 
        ROLLE. Personen Rolleninformationen. Eintrag in der Partnertabelle kennzeichnet 
          -  a) Rolle der Person i.S. DBGK oder 
          -  b) Existenz bestimmter Informations-Objekte (Anschrift, Statistikdaten etc.) in der Personen-DB.
    Message_text:
      type: string
      description: Meldungstext.
      example: 'Noch weitere Daten vorhanden.'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'
    Boolean_param:
        type: boolean
        example: false
        description: >-
            Nur das Rechtsformverbund der Person soll angezeigt werden.
    JsonApiError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    # HealthCheck analog zu SpringBoot
    HealthOkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
        components:
          type: object
    HealthErrorResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - OUT_OF_SERVICE
        components:
          type: object
  securitySchemes:
    EsbAuthorization:
      type: http
      scheme: basic
    appId:
      type: apiKey
      in: header
      name: x-app-id
      description: Applikationskürzel zum FIA-User (wird zur Zuordnung des Client benutzt)
