openapi: 3.0.1
info:
  title: Product-Service API Description
  description: >

    # Beschreibung
    Der Product-Service dient dem Auslesen von Produktdaten des Kunden aus
    OSPlus. Anhand der Kundensatznummer wird eine Liste geliefert, welche
    Produkte der Kunde nutzt. Es werden jeweils die Produktkategorien
    zurückgeliefert, für die zu dem Kunden entsprechende Produkte vorhanden
    sind. Zusatzinformationen zu den  einzelnen Produkten werden nicht
    mitgeliefert.
     
    # Rahmenbedingungen
    Welche Rahmenbedingungen sind zu beachten, damit der Service genutzt werden
    kann, insbesondere
      - Rechte: Welche Rechte müssen vorhanden sein/beantragt werden, damit der Service genutzt werden kann
      - Verfügbarkeitszeiten: Wann ist der Service verfügbar?
      - Offene Detailpunkte:
      - Rechte: Im Zielzustand sollte mit der Vergabe des Rechts zur Nutzung des Service auch alle darunterliegenden Rechte, die erforderlich sind, angelegt werden (Service-Gedanke)
      - Serviceparameter: weitergehende Regelungen wie Quotas etc. sind nicht Teil der Swagger-Dokumentation, sondern Parameter im API-Gateway, werden dort gepflegt und publiziert

    # Domäne/Subdomäne
      - Welcher fachlichen Domäne ist der Service zugeordnet?
      - Die Information dient der Strukturierung/Ordnung der Services im API-Verzeichnis aus Sicht der fachlichen Architektur.
      - Bei Composite Services über mehrere Domänen gibt i.d.R. eine Domäne, die führend ist (Einstiegspunkt). Der Service wird dieser Domäne zugeordnet.
      - Die Ausprägungen sind die Domänen der Fachlandkarte. Abweichende Domänen muss das Architekturmanagement genehmigen.

    # IT-System(-nummer)
      - Welchem IT-System ist der Service zugeordnet.
      - Der Service erbt von dem IT-System einige wesentliche Eigenschaften, insbesondere die Ownerschaften und das Schutz-Niveau, das der Service bietet.
      - Bei Composite Services über mehrere Systeme gibt i.d.R. ein System, das führend ist (Einstiegspunkt). Der Service wird diesem System zugeordnet.

    # Offene Detailpunkte
      - Welche Eigenschaften erbt der Service von dem System?
      - Werden diese Eigenschaften beim Service im API-Verzeichnis mit publiziert (Komfort) und/oder das IT-System verlinkt.
      - Wird die Systemnummer publiziert?

    # Schutzniveau
    Schutz-Niveau des IT-Systems oder geringer

    # Release-Notes
    2020-06-17: V0.1.0  Pre-Release. MockUp ausgebaut. Healthcheck implementiert. ProductResponse eingefuegt. KeyDirService eingebunden.

    # Status
    Version 0.1.0: Pre-Release. MockUp ausgebaut. Healthcheck implementiert. ProductResponse eingefuegt. KeyDirService eingebunden.

    # Offene Detailpunkte
    Welche Ausprägungen bilden wir da ab? Mögliche Quellen: Statusausprägungen,
    die ApiOmat im Zuge Versionierung anbietet und/oder Packaging Konzepte z.B.
    für Python
  version: 0.1.0
  termsOfService: /agb
  contact:
    name: Nicholas Trawniczek
    url: 'http://api.lbbw.de'
    email: Nicholas.Trawniczek@lbbw.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-keywords: >-
    Produkt Kreditkartenlimit S&L-Limit Aval Derivat Tagesgeldkonto
    Absatzfinanzierung GLS-Limit
  x-logo:
    altText: LBBW logo
    url: 'https://www.lbbw.de/res/images/logos/lbbw-logo-darkblue_131586_m.svg'
externalDocs:
  description: Diese Dokumentation basiert auf der Open Api Specification V3.
  url: 'https://github.com/OAI/OpenAPI-Specification'
servers:
  - url: 'http://api.bp.entw.bank.lbbw.sko.de/customer/product-service/'
    description: API-Verzeichnis
  - url: 'https://esb.bp.entw.bank.lbbw.sko.de/customer/product-service/'
    description: ESB-Service Integrationsumgebung
tags:
  - name: products
    description: Produktdaten
  - name: product_models
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Product"
      exampleRef="#/components/examples/Product" showReadOnly={true}
      showWriteOnly={true} />
    x-displayName: Das Produkt-Datenmodell
x-tagGroups:
  - name: Product_Service
    tags:
      - get products
      - healthcheck
  - name: Models
    tags:
      - product_models
paths:
  /health:
    get:
      security: []
      tags: [healthcheck]
      summary: Allgemeiner Healthcheck.
      description: |
        Dieser muss ohne Autorisierung aufrufbar sein.
        Die Minimalanforderung ist ein {status: 'UP'} wenn der Service gerufen werden kann.
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckOkResponse"
              example:
                status: "UP"
        '503':
          description: Error - Meldung nur möglich, wenn Prüfung ausserhalb des Service erfolgt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckErrorResponse'
              example:
                status: "OUT_OF_SERVICE"
  /products/{customerId}:
    parameters:
      - $ref: '#/components/parameters/service-path'
      - $ref: '#/components/parameters/x-forwarded-proto'
      - $ref: '#/components/parameters/x-forwarded-host'
    get:
      operationId: getProductsByCustomerId
      summary: Abrufen der Produktnutzungsdaten eines Kunden
      description: Liefert Produktnutzungsdaten zu einem Kunden-Datensatz zurueck
      tags:
        - get products
      parameters:
        - name: customerId
          in: path
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '204':
          description: Customer not found
          content: {}
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - EsbAuthorization: []
    appId: []
components:
  schemas:
    ProductsResponse:
      description: Datenmodell Gesamtantwortliste
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Products'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          type: products
          id: '43525748'
          attributes:
            products:
              productCategory: GG_UK
        links:
          self: 'http://api.lbbw.de/customer/product-service/products/43525748'
    Products:
      description: Datenmodell der Liste mit Produkten.
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - products
          example: products
        id:
          $ref: '#/components/schemas/CustomerId'
        attributes:
          required:
          - products
          type: object
          properties:
            products:
              type: array
              items:
                $ref: '#/components/schemas/Product'
    Product:
      description: Produktdaten
      required:
      - productCategory
      type: object
      properties:
        productCategory:
          type: string
          description: Bezeichnung der Variante/Kategorie eines Geschaeftsproduktes (s. GP)
          example: V-LBBW-GBV
    CustomerId:
      maxLength: 10
      pattern: '\d{1,10}'
      type: string
      description: KUSA - LBBW Kunden-ID
      example: '43525748'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'
    JsonApiError:
      type: object
      properties:
        code:
          type: string
        detail:
          type: string
        id:
          type: string
        status:
          type: string
        title:
          type: string
    # HealthCheck analog zu SpringBoot
    HealthCheckOkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
            - UNKNOWN
        components:
          type: object
    HealthCheckErrorResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - DOWN
            - OUT_OF_SERVICE
        components:
          type: object
  parameters:
    service-path:
      name: service-path
      in: header
      description: >-
        Pfad mit Domäne und Servicename aus dem API-Verzeichnis. Wird zur
        Bildung der links verwendet.
      schema:
        type: string
        example: /customer/product-service
    x-forwarded-proto:
      name: x-forwarded-proto
      in: header
      description: 'Protokoll, mit dem der ursprüngliche API-Aufruf erfolgte'
      schema:
        type: string
        example: https
    x-forwarded-host:
      name: x-forwarded-host
      in: header
      description: >-
        Host, an den die ursprüngliche Anfrage ging. Wird zur Bildung der links
        verwendet
      schema:
        type: string
        format: url
  securitySchemes:
    EsbAuthorization:
      type: http
      scheme: basic
    appId:
      type: apiKey
      description: Applikationskuerzel zum FIA-User (wird zur Zuordnung des Client benutzt)
      name: x-app-id
      in: header
        
