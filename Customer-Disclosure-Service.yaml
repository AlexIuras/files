openapi: 3.0.1
info:
  title: Disclosure-Service
  description: >

    # Beschreibung
    
    Informationen bezüglich der Offenlegung(Disclosure) sollen nach OSP geschrieben und in Responses zurückgemeldet werden. 

    # Rahmenbedingungen
    
    Welche Rahmenbedingungen sind zu beachten, damit der Service genutzt werden kann, insbesondere:
      - Rechte: Der aufrufende User muss in ESBConfig die Berechtigung zum Aufruf von Service 'DynsBA'/Domäne OSP besitzen. 
        Zur Abfrage von Daten zu Mitarbeitern (Organkennzeichen gesetzt) benötigt der zugeordnete SUSer das Privileg 'MITARBEITER'. 
        Falls das Zugriffsschutz-Kennzeichen einer gesuchten Personen gesetzt ist
        (ZUGRIFFSSCHUTZ_KZ = 'J' ), benötigt der Anwender das Privileg 'ZUGRIFF-PERS'.
      - Verfügbarkeitszeiten: Wann ist der Service verfügbar?
      - Offene Detailpunkte:
      - Rechte: Im Zielzustand sollte mit der Vergabe des Rechts zur Nutzung des Service auch alle darunterliegenden Rechte, die erforderlich sind, angelegt werden (Service-Gedanke)
      - Serviceparameter: weitergehende Regelungen wie Quotas etc. sind nicht Teil der Swagger-Dokumentation, sondern Parameter im API-Gateway, werden dort gepflegt und publiziert

    # Domäne/Subdomäne
      - der Service ist der fachlichen Domäne 'Customer' zugeordnet.
     
    # IT-System(-nummer)
      -  IT-System: nicht bekannt
     
    # Offene Detailpunkte
      - Welche Eigenschaften erbt der Service von dem System?
      - Werden diese Eigenschaften beim Service im API-Verzeichnis mit publiziert (Komfort) und/oder das IT-System verlinkt.
      - Wird die Systemnummer publiziert?

    # Schutzniveau
    
    Schutz-Niveau des IT-Systems oder geringer

    # Offene Detailpunkte
    
    Welche Ausprägungen bilden wir da ab? Mögliche Quellen: Statusausprägungen,
    die ApiOmat im Zuge Versionierung an bietet und/oder Packaging Konzepte z.B. für Python.
    
    # Release-Notes
    
      - 2020-05-14: v0.9.71  Datumsformat ISO yyyy-MM-dd
      - 2020-05-28: v0.9.72  Typ Boolean eingefügt.
      - 2020-06-03: v0.9.73  RequestBodies jetzt mit schema:type: object
      - 2020-06-22: v0.1.0   gen_con_type und gen_con_class Felder aus Refusal entfernt. Health hinzugefügt.
      - 2020-06-22: v0.1.1   Request Objekten für den Code-Generator optimiert.
      - 2020-07-08: v0.1.2   Umstellung auf Patch anstelle Put. Diverse Verbesserungen.
      - 2020-07-09: v0.1.3   CustomerId als Query-Parameter. Tags und Endpoints umbenannt. Enum des Occurence eingefügt. Required geadded.
      - 2020-07-13: v0.1.4   Refuse -> Refusal. Example Refusal angepasst.
      - 2020-07-16: v0.1.5   Beschreibungen, Model-Tags geändert.
      - 2020-07-17: v0.1.6   Links -> self in allen Responses entfernt da keine GET Operationen beauftragt. 
      - 2020-07-17: v0.1.7   Examples, Response-Code-Texts, Model-Tags, Zeilenumbruch in Release-Notes Markdown und id angepasst.
      - 2020-07-20: v0.1.8   OL Erfolgt bzw. Unterlagen eingegangen -> Datenmodell an DynS Prozesse angepasst.
      - 2020-07-21: v0.1.9   id ist jetzt der frühere refusalId. customerId in den Payloads.
      - 2020-08-10: v0.1.10  Put Refusals zu Post Refusals umgestellt. Zusätzliche Felder ins Refusal Modell.

    # Status
    
        Version v0.1.10  Put Refusals zu Post Refusals umgestellt. Zusätzliche Felder ins Refusal Modell.
  version: v0.1.10
  termsOfService: /agb
  contact:
    name: Nicholas Trawniczek
    url: 'http://api.lbbw.de'
    email: Nicholas.Trawniczek@lbbw.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-keywords: >-
    Prüfungsergebnis, Offenlegungspflicht, Ausnahmetatbestand, Erfolgt, Verweigert, Offenlegung
  x-logo:
    altText: LBBW logo
    url: 'https://www.lbbw.de/res/images/logos/lbbw-logo-darkblue_131586_m.svg'
externalDocs:
  description: Diese Dokumentation basiert auf der Open Api Specification V3.
  url: 'https://github.com/OAI/OpenAPI-Specification'
servers:
  - url: 'https://api.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: API-Verzeichnis
  - url: 'https://esb.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: ESB-Service Integrationsumgebung
tags:
  - name: occurence_req_model
    x-displayName: OccurenceRequest
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/OccurenceRequest"
      showReadOnly={true} showWriteOnly={true} />
  - name: occurence_resp_model
    x-displayName: OccurenceResponse
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/OccurenceResponse"
      showReadOnly={true} showWriteOnly={true} />
  - name: refusal_req_model
    x-displayName: RefusalRequest
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/RefusalRequest"
      showReadOnly={true} showWriteOnly={true} />
  - name: refusal_resp_model
    x-displayName: RefusalResponse
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/RefusalResponse"
      showReadOnly={true} showWriteOnly={true} />
  - name: requirement_req_model
    x-displayName: RequirementRequest
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/RequirementRequest"
      showReadOnly={true} showWriteOnly={true} />
  - name: requirement_resp_model
    x-displayName: RequirementResponse
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/RequirementResponse"
      showReadOnly={true} showWriteOnly={true} />
  - name: health_model
    x-displayName: Health
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/HealthOkResponse" showReadOnly={true} showWriteOnly={true} />
       <SchemaDefinition schemaRef="#/components/schemas/HealthErrorResponse" showReadOnly={true} showWriteOnly={true} />
x-tagGroups:
  - name: Disclosure
    tags:
      - occurences
      - refusals
      - requirements
  - name: Healthcheck
    tags:
      - health
  - name: Models
    tags:
      - occurence_req_model
      - occurence_resp_model
      - refusal_req_model
      - refusal_resp_model
      - requirement_req_model
      - requirement_resp_model
      - health_model
paths:
  '/occurences':
    put:
      operationId: putOccurences
      tags: [occurences]
      summary: Aktualisiert und liefert Offenlegung-Erfolgt-Daten zu einem Kunden-Datensatz zurück.
      description: >-
        Es soll nach OSP geschrieben werden, wann die Offenlegung erfolgt ist.
        Wenn der Berater die erforderlichen Unterlagen ausgewertet hat, 
        erfasst der Berater in der GUI das Datum der Auswertung der Unterlagen und
        die Art der eingereichten Dokumente sowie Freitext dazu. 
        Diese Informationen sollen nach OSP geschrieben werden.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OccurenceRequest'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OccurenceResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/refusals':
    post:
      operationId: postRefusals
      tags: [refusals]
      summary: Verweigerungen werden zu einem Kunden-Datensatz angelegt und ausgelesen zurück gemeldet.
      description: >-
        Es soll nach OSP ein GEKO geschrieben werden, wenn i.R. der Anforderung von Dokumenten der Kunde 
        das Einreichen generell oder teilweise verweigert. Verweigert der Kunde die Offenlegung seiner wirtschaftlichen Verhältnisse,
        soll dies in OSP geschrieben werden. Dafür gibt es bisher kein Kennzeichen. 
        Es wurde ein neuer GeKo bzw. eine neue Rolle angelegt -> X-OFFLEG. 
        Zu Jeder Verweigerung muss ein Verweigerungsdatum gesetzt sein.
        Optional können noch weitere Parameter einer Verweigerung gesetzt werden:
        Verweigerte Unterlage 1. Verweigerte Unterlage 2. Bemerkungen.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RefusalRequest'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RefusalResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/requirements':
    put:
      operationId: putRequirements
      tags: [requirements]
      summary: Aktualisiert und liefert Offenlegungspflichtkennzeichen-Daten zu einem Kunden-Datensatz zurück.
      description: >- 
        Das Prüfergebnis aus der Offenlegungspflicht ist nach OSP zu schreiben. 
        Es sollen die Ergebnisse der Prüfung, ob der Kunde offenlegungspflichtig 
        ist nach OSP-§18 Anwendung geschrieben werden. Entweder, der Kunde ist offenlegungspflichtig 
        oder es wurden Ausnahmetatbestände ermittelt.
        Verwendete fachliche DynS Prozesse: KWG18_PERSON_AENDERN und KWG18_PERSON_LESEN.
        Wichtig: Die Operation kann entweder fürs aktivieren/deaktivieren der Offenlegungspflicht,
        oder fürs setzen/löschen der Ausnahmeregelungen. 
        Beim aktivieren OL Pflicht kann gleichzeitig eine Ausnahmeregelung gesetzt werden.
        Für einen deaktivierten Kunden kann keine Ausnahmeregelung gesetzt werden.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequirementRequest'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponse'
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/health':
    get:
      security: []
      tags: [health]
      summary: Allgemeiner Healthcheck.
      description: >-
        Dieser muss ohne Autorisierung aufrufbar sein. Die Minimalanforderung ist ein {status: 'UP'} 
        wenn der Service gerufen werden kann.
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthOkResponse"
              example:
                status: "UP"
        '503':
          description: Error - Meldung nur möglich, wenn Prüfung ausserhalb des Service erfolgt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthErrorResponse'
              example:
                status: "OUT_OF_SERVICE"
security:
  - EsbAuthorization: []
    appId: []
components:
  schemas:
# OL Erfolgt - Unterlagen eingereicht
    OccurenceRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
    OccurenceResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
    Occurence:
      type: object
      description: >-
        Offenlegung erfolgt. Anhand des CustomerId, documentType und documentDeadline wird eine Unterlage eindeutig identifiziert.
      required:
      - type
      - attributes
      properties:
        type:
          type: string
          description: Objekt Type
          enum:
            - occurences
          example: occurences
        attributes:
          type: object
          required:
          - customerId
          - documentType
          - documentDeadline
          - dateOfDisclosure
          - evaluatedBy
          properties:
            customerId:
              $ref: '#/components/schemas/CustomerId'
            documentType:
              type: integer
              format: int32
              description: >- 
                Lfd. Nr. der Art einer im KWG18-Umfeld anzufordernden Unterlage (1 - 27).
                Unterlagen Art wie im KWG18_UNTERL_DEF_ANLEGEN beschrieben, von 1 bis 27. Pflichtfeld.
              example: 6
            documentDeadline:
              type: string
              format: date
              description: >- 
                Stichtag einer anzufordernden Unterlage. Nach ISO8601 Format. 
                In DynS wird nur das Datum alleine, ohne Zeit benötigt. Pflichtfeld.
              example: '2019-12-31'
            dateOfDisclosure:
              type: string
              format: date
              description: >- 
                Datum der Auswertung und Prüfung der Unterlage. Nach ISO8601 Format.
                Datum an dem die Unterlage geprüft ist und die Offenlegung erfolgt ist.
                In DynS wird nur das Datum alleine, ohne Zeit geschrieben. Pflichtfeld.
              example: '2019-11-30'
            evaluatedBy:
              type: string
              description: >- 
                Ausgewertet von. Name des Bearbeiters. Pflichtfeld.
              example: 'Heribert Alpmann'
            messageText:
              type: string
              example: 'Das DynS Prozess ist erfolgreich durchgeführt.'
              description: >- 
                Meldungstext im Zusammenhang mit dem schreiben der eingegebenen Parametern.
                Optionales Feld wenn im Request.
# OL Verweigerung schreiben   
    RefusalRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Refusal'
    RefusalResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Refusal'
    Refusal:
      type: object
      description: Offenlegungspflicht Verweigerung. Mindestens einen refusalDocument muss geschrieben werden.
      required:
      - type
      - attributes
      properties:
        id:
          type: string
          description: >-
                Base64 encodierter ID-Timestamp der Verweigerung. 
                Eindeutiger Schlüssel des GeKos bzw. der Verweigerung.
          example: MDAwMS0wMS0wMS0wMC4wMC4wMC4wMDAwMDA
        type:
          type: string
          description: Objekt Type
          enum:
            - refusals
          example: refusals
        attributes:
          type: object
          required:
          - customerId
          - dateOfRefusal
          - completeRefusal
          properties:
            customerId:
              $ref: '#/components/schemas/CustomerId'
            dateOfRefusal:
              type: string
              format: date
              description: >- 
               Verweigerung erfolgt am Datum. Pflichtfeld.
               Alleine das Datum, ohne Zeit, also kein DateTime sondern Date nach ISO8601 Format.
              example: '2020-02-22'
            refusalDocument1:
              type: integer
              format: int32
              description: >- 
                Lfd. Nr. der Art einer im KWG18-Umfeld anzufordernden Unterlage (1 - 27).
                Unterlagen Art wie im KWG18_UNTERL_DEF_ANLEGEN beschrieben, von 1 bis 27.
              example: 6
            refusalDocument2:
              type: integer
              format: int32
              description: >- 
                Lfd. Nr. der Art einer im KWG18-Umfeld anzufordernden Unterlage (1 - 27).
                Unterlagen Art wie im KWG18_UNTERL_DEF_ANLEGEN beschrieben, von 1 bis 27.
              example: 12
            completeRefusal:
              type: boolean
              nullable: true
              example: true
              description: >- 
                Komplettverweigerung ja/nein. Default wenn nicht gesendet: false.
            refusalRemarks:
              type: string
              description: >- 
                Bemerkungen zur Verweigerung.
              example: "Teilverweigerung"
            messageText:
              type: string
              description: >- 
                Meldungstext aus dem DynS-Prozess.
              example: 'MGK16340N010 - Der Prozess wurde erfolgreich ausgefuehrt.'
# OL Pflicht schreiben
    RequirementRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
    RequirementResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
    Requirement:
      type: object
      description: Offenlegungspflichtkennzeichen.
      required:
      - type
      - attributes
      properties:
        type:
          type: string
          description: Objekt Type
          enum:
            - requirements
          example: requirements
        attributes:
          type: object
          required:
          - customerId
          properties:
            customerId:
              $ref: '#/components/schemas/CustomerId'
            disclosureRequirement:
              type: boolean
              example: true
              description: >- 
                Offenlegungspflicht Aktiv-KZ Ja-Aktiv/Nein-Inaktiv. 
                Für manche customerIds kann die Offenlegungspflicht nicht deaktiviert werden.
                In solchen Fällen wird eine entsprechende Nachricht im MessageText geschrieben.
                Name im DynS - UEBERWACH_AKTIV_KZ.
            exceptionId:
              type: integer
              format: int32
              example: 7
              description: >- 
                Lfd. Nr. der Ausnahmeregelung die zum Kunden gesetzt werden soll (1 - 50).
                Ausnahmeregelungnummer wie im KWG18_AUSN_BESCHL_LESEN beschrieben, von 1 bis 50,
                es können aber neue Ausnahmeregelungen von Administratoren eingefügt,
                oder bestehende Ausnahmeregelungen deaktiviert werden. 
                Nur Ausnahmeregelungen die aktiv sind sollten gesetzt werden.
                Mit der Null - 0 - wird eine Ausnahmeregelung und die dazugehörigen von/bis Datümer gelöscht.
                Wenn mit 0, die Ausnahme gelöscht wird, darf nicht gleichzeitig auch die Offenlegungspflicht umgestellt werden.
                Bzw. nur bei einem aktiven Customer können Ausnahmeregelungen geändert werden.
                Name im DynS - AUSN_BESCHL_NR.
            exceptionValidFrom:
              type: string
              format: date
              example: '2019-04-13'
              description: >- 
                Datum gültig ab nach ISO8601 Format. Ausnahmeregelung gültig ab. Name im DynS - AUSN_BESCHL_DATUM_VON.
            exceptionValidTo:
              type: string
              format: date
              example: '2099-04-13'
              description: >- 
                Datum gültig bis nach ISO8601 Format. Ausnahmeregelung gültig bis. Name im DynS - AUSN_BESCHL_DATUM_BIS.
            messageText:
              type: string
              example: 'Inaktivierung bzw. Historisierung ist wegen SAMBA oder Rating nicht zulaessig.'
              description: >- 
                Meldungstext im Zusammenhang mit dem schreiben der eingegebenen Parametern.
                Optionales Feld wenn im Request.
    CustomerId:
      type: string
      description: >-
        KUSA. Eindeutiger Schlüssel des Kunden.
      maxLength: 10
      pattern: '\d{1,10}'
      example: '630188'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'
    JsonApiError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    # HealthCheck analog zu SpringBoot
    HealthOkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
        components:
          type: object
    HealthErrorResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - OUT_OF_SERVICE
        components:
          type: object
  securitySchemes:
    EsbAuthorization:
      type: http
      scheme: basic
    appId:
      type: apiKey
      in: header
      name: x-app-id
      description: Applikationskürzel zum FIA-User (wird zur Zuordnung des Client benutzt)
