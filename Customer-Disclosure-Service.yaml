openapi: 3.0.1
info:
  title: Disclosure-Service API Description
  description: >

    # Beschreibung Operation 1:
    
    Das Pruefergebnis aus der Offenlegungspflicht ist nach OSP  zu schreiben. Es
    sollen die Ergebnisse der Pruefung, ob der Kunde offenlegungspflichtig ist  nach OSP-§18 Anwendung geschrieben
    werden. Entweder, der Kunde ist offenlegungspflichtig oder es wurden
    Ausnahmetatbestände ermittelt.

    # Beschreibung Operation 2:
    
    Es soll nach OSP geschrieben werden, wann die Offenlegung erfolgt ist.
    Wenn der Kunde die erforderlichen Unterlagen eingereicht hat, 
    erfasst der Berater in der GUI das Datum der Auswertung der Unterlagen und
    die Art der eingereichten Dokumente.
    Diese Informationen sollen nach OSP geschrieben werden.

    # Beschreibung Operation 3:
    
    Das Pruefergebnis aus der Offenlegungspflicht ist nach OSP  zu schreiben. Es
    sollen die Ergebnisse der Pruefung, ob der Kunde offenlegungspflichtig ist  nach OSP-§18 Anwendung geschrieben
    werden. Entweder, der Kunde ist offenlegungspflichtig oder es wurden
    Ausnahmetatbestände ermittelt.

    # Rahmenbedingungen
    
    Welche Rahmenbedingungen sind zu beachten, damit der Service genutzt werden
    kann, insbesondere
      - Rechte: Der aufrufende User muss in ESBConfig die Berechtigung zum Aufruf von Service 'DynsBA'/Domäne OSP besitzen. 
        Zur Abfrage von Daten zu Mitarbeitern (Organkennzeichen gesetzt) benötigt der zugeordnete SUSer das Privileg 'MITARBEITER'. 
        Falls das Zugriffsschutz-Kennzeichen einer gesuchten Personen gesetzt ist
        (ZUGRIFFSSCHUTZ_KZ = 'J' ), benötigt der Anwender das Privileg 'ZUGRIFF-PERS'.
      - Verfuegbarkeitszeiten: Wann ist der Service verfuegbar?
      - Offene Detailpunkte:
      - Rechte: Im Zielzustand sollte mit der Vergabe des Rechts zur Nutzung des Service auch alle darunterliegenden Rechte, die erforderlich sind, angelegt werden (Service-Gedanke)
      - Serviceparameter: weitergehende Regelungen wie Quotas etc. sind nicht Teil der Swagger-Dokumentation, sondern Parameter im API-Gateway, werden dort gepflegt und publiziert

    # Domäne/Subdomäne
      - der Service ist der fachlichen Domäne 'Customer' zugeordnet.
     
    # IT-System(-nummer)
      -  IT-System: nicht bekannt
     
    # Offene Detailpunkte
      - Welche Eigenschaften erbt der Service von dem System?
      - Werden diese Eigenschaften beim Service im API-Verzeichnis mit publiziert (Komfort) und/oder das IT-System verlinkt.
      - Wird die Systemnummer publiziert?

    # Schutzniveau
    
    Schutz-Niveau des IT-Systems oder geringer

    # Release-Notes
    
    2020-05-14: V0.9.71  Datumsformat ISO yyyy-MM-dd
    2020-05-28: V0.9.72  Typ Boolean eingefuegt.
    2020-06-03: v0.9.73  RequestBodies jetzt mit schema:type: object
    2020-06-22: v0.1.0   gen_con_type und gen_con_class Felder aus Refuse entfernt. Health hinzugefuegt.
    2020-06-22: v0.1.1   Request Objekten fuer den Code-Generator optimiert.

    # Status
    
    Version 0.1.1:   Request Objekten fuer den Code-Generator optimiert.

    # Offene Detailpunkte
    
    Welche Ausprägungen bilden wir da ab? Mögliche Quellen: Statusausprägungen,
    die ApiOmat im Zuge Versionierung anbietet und/oder Packaging Konzepte z.B.
    fuer Python
  version: 0.1.1
  termsOfService: /agb
  contact:
    name: Nicholas Trawniczek
    url: 'http://api.lbbw.de'
    email: Nicholas.Trawniczek@lbbw.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-keywords: >-
    Pruefungsergebnis, Offenlegungspflicht, Ausnahmetatbestand, Erfolgt, Verweigert, Offenlegung
  x-logo:
    altText: LBBW logo
    url: 'https://www.lbbw.de/res/images/logos/lbbw-logo-darkblue_131586_m.svg'
externalDocs:
  description: Diese Dokumentation basiert auf der Open Api Specification V3.
  url: 'https://github.com/OAI/OpenAPI-Specification'
servers:
  - url: 'https://api.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: API-Verzeichnis
  - url: 'https://esb.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: ESB-Service Integrationsumgebung
tags:
  - name: requirement_model
    x-displayName: Das Offenlegungspflichtkennzeichen-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Requirement"
      showReadOnly={true} showWriteOnly={true} />
  - name: refuse_model
    x-displayName: Das Offenlegungspflicht-verweigert-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Refuse"
      showReadOnly={true} showWriteOnly={true} />
  - name: occurence_model
    x-displayName: Das Offenlegungspflicht-erfolgt-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Occurence"
      showReadOnly={true} showWriteOnly={true} />
x-tagGroups:
  - name: Disclosure_Service
    tags:
      - healthcheck
      - update disclosure requirement
      - update disclosure occurence
      - update disclosure refuse
paths:
  '/health':
    get:
      security: []
      tags: [healthcheck]
      summary: Allgemeiner Healthcheck.
      description: |
        Dieser muss ohne Autorisierung aufrufbar sein.
        Die Minimalanforderung ist ein {status: 'UP'} wenn der Service gerufen werden kann.
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckOkResponse"
              example:
                status: "UP"
        '503':
          description: Error - Meldung nur möglich, wenn Pruefung ausserhalb des Service erfolgt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckErrorResponse'
              example:
                status: "OUT_OF_SERVICE"
  '/requirement/{customerId}':
    parameters:
      - $ref: '#/components/parameters/x-forwarded-proto'
      - $ref: '#/components/parameters/x-forwarded-host'
      - $ref: '#/components/parameters/x-forwarded-prefix'
    put:
      operationId: updateDisclosureRequirementByCustomerId
      summary: Schreiben der Offenlegungspflichtkennzeichen-Daten
      description: >-
        Aktualisiert und liefert Offenlegungspflichtkennzeichen-Daten zu einem
        Kunden-Datensatz zurueck
      tags:
        - update disclosure requirement
      parameters:
        - name: customerId
          in: path
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        description: Disclosure-requirement
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequirementRequest'
      responses:
        '200':
          description: Disclosure requirement successfully updated.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/refuse/{customerId}':
    parameters:
      - $ref: '#/components/parameters/x-forwarded-proto'
      - $ref: '#/components/parameters/x-forwarded-host'
      - $ref: '#/components/parameters/x-forwarded-prefix'
    put:
      operationId: updateDisclosureRefuseByCustomerId
      summary: Schreiben der Offenlegungspflicht-verweigert-Daten
      description: >-
        Aktualisiert und liefert Offenlegungspflicht-verweigert-Daten zu einem
        Kunden-Datensatz zurueck
      tags:
        - update disclosure refuse
      parameters:
        - name: customerId
          in: path
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        description: Disclosure-refuse
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RefuseRequest'
      responses:
        '200':
          description: Disclosure refuse successfully updated.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RefuseResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/occurence/{customerId}':
    parameters:
      - $ref: '#/components/parameters/x-forwarded-proto'
      - $ref: '#/components/parameters/x-forwarded-host'
      - $ref: '#/components/parameters/x-forwarded-prefix'
    put:
      operationId: updateDisclosureOccurenceByCustomerId
      summary: Schreiben der Offenlegung-Erfolgt-Daten
      description: >-
        Aktualisiert und liefert Offenlegung-Erfolgt-Daten zu einem
        Kunden-Datensatz zurueck
      tags:
        - update disclosure occurence
      parameters:
        - name: customerId
          in: path
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        description: Disclosure-occurence
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OccurenceRequest'
      responses:
        '200':
          description: Disclosure requirement successfully updated.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OccurenceResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - EsbAuthorization: []
    appId: []
components:
  schemas:
    RequirementRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
    RequirementResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: requirements
            id: '43525748'
            attributes:
              disclosure_requirement: 'true'
              exception_reason: Ausnahmetatbestand Grund
              valid_from: '2020-02-02T14:25:00.000+02:00'
              date_of_expiry: '2020-02-02T14:25:00.000+02:00'
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/requirement/43525748'
    Requirement:
      type: object
      description: Datenmodell Offenlegungspflichtkennzeichen
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel der Offenlegungspflichtkennzeichen-Daten
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - requirements
          example: requirements
        attributes:
          type: object
          properties:
            disclosure_requirement:
              type: boolean
              description: Offenlegungspflicht Aktiv-KZ Ja-Aktiv/Nein-Inaktiv.
              example: true
            exception_reason:
              type: string
              description: Ausnahmetatbestand Grund
              example: Ausnahmetatbestand_Grund
            valid_from:
              type: string
              description: Datum gueltig ab.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            date_of_expiry:
              type: string
              description: Datum gueltig ab.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
    RefuseRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Refuse'
    RefuseResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Refuse'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: refuses
            id: '43525748'
            attributes:
              date: '2020-02-02T14:25:00.000+02:00'
              customer_type: 52
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/refuse/43525748'
    Refuse:
      type: object
      description: Datenmodell Offenlegungspflicht-verweigert.
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel der Offenlegungspflicht-verweigert-Daten
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - refuses
          example: refuses
        attributes:
          type: object
          properties:
            date:
              type: string
              description: Verweigerung erfolgt am.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            customer_type:
              type: number
              description: Kunden Art.
              example: 52
    OccurenceRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
    OccurenceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: occurences
            id: '43525748'
            attributes:
              date: '2020-02-02T14:25:00.000+02:00'
              document_type: Bilanz
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/occurence/43525748'
    Occurence:
      type: object
      description: Datenmodell Offenlegungspflicht-erfolgt.
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - occurences
          example: occurences
        attributes:
          type: object
          properties:
            date:
              type: string
              description: Offenlegung erfolgt am.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            document_type:
              type: string
              description: Unterlagen Art.
              example: Bilanz
    CustomerId:
      type: string
      maxLength: 10
      pattern: '\d{1,10}'
      example: '43525748'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'
    JsonApiError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    # HealthCheck analog zu SpringBoot
    HealthCheckOkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
        components:
          type: object
    HealthCheckErrorResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - OUT_OF_SERVICE
        components:
          type: object
  parameters:
    x-forwarded-proto:
      name: x-forwarded-proto
      in: header
      description: 'Protokoll, mit dem der urspruengliche API-Aufruf erfolgte'
      schema:
        type: string
        example: https
    x-forwarded-host:
      name: x-forwarded-host
      in: header
      description: >-
        Host, an den die urspruengliche Anfrage ging. Wird zur Bildung der links
        verwendet
      schema:
        type: string
        format: url
        example: api.lbbw.de
    x-forwarded-prefix:
      name: x-forwarded-prefix
      in: header
      description: >-
        Pfad mit Domäne und Servicename aus dem API-Verzeichnis. Wird zur
        Bildung der links verwendet.
      schema:
        type: string
        example: /customer/disclosure-service
  securitySchemes:
    EsbAuthorization:
      type: http
      scheme: basic
    appId:
      type: apiKey
      in: header
      name: x-app-id
      description: Applikationskuerzel zum FIA-User (wird zur Zuordnung des Client benutzt)
