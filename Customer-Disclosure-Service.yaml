openapi: 3.0.1
info:
  title: Disclosure-Service API Description
  description: >

    # Beschreibung Operation 1 - OL Pflicht - Requirements:
    
    Das Pruefergebnis aus der Offenlegungspflicht ist nach OSP  zu schreiben. 
    Es sollen die Ergebnisse der Pruefung, ob der Kunde offenlegungspflichtig ist  nach OSP-§18 Anwendung geschrieben
    werden. Entweder, der Kunde ist offenlegungspflichtig oder es wurden
    Ausnahmetatbestände ermittelt.

    # Beschreibung Operation 2 - OL Erfolgt - Occurences:
    
    Es soll nach OSP geschrieben werden, wann die Offenlegung erfolgt ist.
    Wenn der Berater die erforderlichen Unterlagen ausgewertet hat, 
    erfasst der Berater in der GUI das Datum der Auswertung der Unterlagen und
    die Art der eingereichten Dokumente.
    Diese Informationen sollen nach OSP geschrieben werden.

    # Beschreibung Operation 3 - OL Verweigert - Refusals:
    
    Es soll nach OSP ein GEKO geschrieben werden, wenn i.R. der Anforderung von 
    Dokumenten der Kunde die Einreichung generell verweigert.
    Verweigert der Kunde die Offenlegung seiner wirtschaftlichen Verhältnisse, soll dies in OSP geschrieben werden. 
    Dafür gibt es bisher kein Kennzeichen. Es wird ein neuer GeKo bzw. eine neue Rolle benötigt. 

    # Rahmenbedingungen
    
    Welche Rahmenbedingungen sind zu beachten, damit der Service genutzt werden
    kann, insbesondere
      - Rechte: Der aufrufende User muss in ESBConfig die Berechtigung zum Aufruf von Service 'DynsBA'/Domäne OSP besitzen. 
        Zur Abfrage von Daten zu Mitarbeitern (Organkennzeichen gesetzt) benötigt der zugeordnete SUSer das Privileg 'MITARBEITER'. 
        Falls das Zugriffsschutz-Kennzeichen einer gesuchten Personen gesetzt ist
        (ZUGRIFFSSCHUTZ_KZ = 'J' ), benötigt der Anwender das Privileg 'ZUGRIFF-PERS'.
      - Verfuegbarkeitszeiten: Wann ist der Service verfuegbar?
      - Offene Detailpunkte:
      - Rechte: Im Zielzustand sollte mit der Vergabe des Rechts zur Nutzung des Service auch alle darunterliegenden Rechte, die erforderlich sind, angelegt werden (Service-Gedanke)
      - Serviceparameter: weitergehende Regelungen wie Quotas etc. sind nicht Teil der Swagger-Dokumentation, sondern Parameter im API-Gateway, werden dort gepflegt und publiziert

    # Domäne/Subdomäne
      - der Service ist der fachlichen Domäne 'Customer' zugeordnet.
     
    # IT-System(-nummer)
      -  IT-System: nicht bekannt
     
    # Offene Detailpunkte
      - Welche Eigenschaften erbt der Service von dem System?
      - Werden diese Eigenschaften beim Service im API-Verzeichnis mit publiziert (Komfort) und/oder das IT-System verlinkt.
      - Wird die Systemnummer publiziert?

    # Schutzniveau
    
    Schutz-Niveau des IT-Systems oder geringer

    # Offene Detailpunkte
    
    Welche Ausprägungen bilden wir da ab? Mögliche Quellen: Statusausprägungen,
    die ApiOmat im Zuge Versionierung an bietet und/oder Packaging Konzepte z.B.
    fuer Python
    
    # Release-Notes
    
    2020-05-14: v0.9.71  Datumsformat ISO yyyy-MM-dd
    2020-05-28: v0.9.72  Typ Boolean eingefuegt.
    2020-06-03: v0.9.73  RequestBodies jetzt mit schema:type: object
    2020-06-22: v0.1.0   gen_con_type und gen_con_class Felder aus Refusal entfernt. Health hinzugefuegt.
    2020-06-22: v0.1.1   Request Objekten fuer den Code-Generator optimiert.
    2020-07-08: v0.1.2   Umstellung auf Patch anstelle Put. Diverse Verbesserungen.
    2020-07-09: v0.1.3   CustomerId als Query-Parameter. Tags und Endpoints umbenannt. Enum des Occurence eingefuegt. Required geadded.
    2020-07-13: v0.1.4   Refuse -> Refusal.

    # Status
    
    Version 0.1.4:   Refuse -> Refusal.
  version: 0.1.4
  termsOfService: /agb
  contact:
    name: Nicholas Trawniczek
    url: 'http://api.lbbw.de'
    email: Nicholas.Trawniczek@lbbw.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-keywords: >-
    Pruefungsergebnis, Offenlegungspflicht, Ausnahmetatbestand, Erfolgt, Verweigert, Offenlegung
  x-logo:
    altText: LBBW logo
    url: 'https://www.lbbw.de/res/images/logos/lbbw-logo-darkblue_131586_m.svg'
externalDocs:
  description: Diese Dokumentation basiert auf der Open Api Specification V3.
  url: 'https://github.com/OAI/OpenAPI-Specification'
servers:
  - url: 'https://api.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: API-Verzeichnis
  - url: 'https://esb.bp.entw.bank.lbbw.sko.de/customer/disclosure-service/'
    description: ESB-Service Integrationsumgebung
tags:
  - name: requirement_model
    x-displayName: Das Offenlegungspflichtkennzeichen-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Requirement"
      showReadOnly={true} showWriteOnly={true} />
  - name: refusal_model
    x-displayName: Das Offenlegungspflicht-verweigert-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Refusal"
      showReadOnly={true} showWriteOnly={true} />
  - name: occurence_model
    x-displayName: Das Offenlegungspflicht-erfolgt-Datenmodell
    description: >
      <SchemaDefinition schemaRef="#/components/schemas/Occurence"
      showReadOnly={true} showWriteOnly={true} />
x-tagGroups:
  - name: Disclosure_Service
    tags:
      - healthcheck
      - put requirements
      - put occurences
      - put refusals
  - name: Models
    tags:
      - requirement_model
      - refusal_model
      - occurence_model
paths:
  '/health':
    get:
      security: []
      tags: [healthcheck]
      summary: Allgemeiner Healthcheck.
      description: >-
        Dieser muss ohne Autorisierung aufrufbar sein. Die Minimalanforderung ist ein {status: 'UP'} wenn der Service gerufen werden kann.
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckOkResponse"
              example:
                status: "UP"
        '503':
          description: Error - Meldung nur möglich, wenn Pruefung ausserhalb des Service erfolgt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckErrorResponse'
              example:
                status: "OUT_OF_SERVICE"
  '/requirements':
    put:
      operationId: putRequirements
      summary: Schreiben der Offenlegungspflichtkennzeichen-Daten
      description: >-
        Aktualisiert und liefert Offenlegungspflichtkennzeichen-Daten zu einem
        Kunden-Datensatz zurueck.
      tags:
        - put requirements
      parameters:
        - name: customerId
          in: query
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequirementRequest'
      responses:
        '200':
          description: Requirement successfully put.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequirementResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/refusals':
    put:
      operationId: putRefusals
      summary: Schreiben der Offenlegungspflicht-verweigert-Daten
      description: >-
        Aktualisiert und liefert Offenlegungspflicht-verweigert-Daten zu einem
        Kunden-Datensatz zurueck
      tags:
        - put refusals
      parameters:
        - name: customerId
          in: query
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RefusalRequest'
      responses:
        '200':
          description: Refusal successfully put.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RefusalResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/occurences':
    put:
      operationId: putOccurences
      summary: Schreiben der Offenlegung-Erfolgt-Daten
      description: >-
        Aktualisiert und liefert Offenlegung-Erfolgt-Daten zu einem
        Kunden-Datensatz zurueck.
      tags:
        - put occurences
      parameters:
        - name: customerId
          in: query
          description: KUSA
          required: true
          schema:
            $ref: '#/components/schemas/CustomerId'
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OccurenceRequest'
      responses:
        '200':
          description: Occurence successfully put.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OccurenceResponse'
        '400':
          description: Invalid Request
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - EsbAuthorization: []
    appId: []
components:
  schemas:
    RequirementRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
    RequirementResponse:
      type: object
      required:
      - data
      - links
      properties:
        data:
          $ref: '#/components/schemas/Requirement'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: requirements
            id: '43525748'
            attributes:
              disclosure_requirement: 'true'
              exception_reason: Ausnahmetatbestand Grund
              date_valid_from: '2020-02-02T14:25:00.000+02:00'
              date_valid_to: '2020-02-02T14:25:00.000+02:00'
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/requirements'
    Requirement:
      type: object
      description: Datenmodell Offenlegungspflichtkennzeichen
      required:
      - id
      - type
      - attributes
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel der Offenlegungspflichtkennzeichen-Daten
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - requirements
          example: requirements
        attributes:
          type: object
          required:
          - disclosure_requirement
          - exception_reason
          - date_valid_from
          - date_valid_to
          properties:
            disclosure_requirement:
              type: boolean
              description: Offenlegungspflicht Aktiv-KZ Ja-Aktiv/Nein-Inaktiv.
              example: true
            exception_reason:
              type: string
              description: Ausnahmetatbestand Grund
              example: Ausnahmetatbestand_Grund
            date_valid_from:
              type: string
              description: Datum gueltig ab.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            date_valid_to:
              type: string
              description: Datum gueltig bis.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
    RefusalRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Refusal'
    RefusalResponse:
      type: object
      required:
      - data
      - links
      properties:
        data:
          $ref: '#/components/schemas/Refusal'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: refusals
            id: '43525748'
            attributes:
              refusalId: '8395-07-07-20.34.32.403320'
              date_of_refusal: '2020-02-02T14:25:00.000+02:00'
              date_valid_to: '2019-04-12T14:25:00.000+02:00'
              messageText: 'MGK16340N010 - Der Prozess wurde erfolgreich ausgefuehrt.'
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/refusals'
    Refusal:
      type: object
      description: Datenmodell Offenlegungspflicht-verweigert.
      required:
      - id
      - type
      - attributes
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel - customerId
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - refusals
          example: refusals
        attributes:
          type: object
          required:
          - date_of_refusal
          properties:
            refusalId:
              type: string
              description: ID des generischen Konstrukts.
              example: '8395-07-07-20.34.32.403320'
            date_of_refusal:
              type: string
              description: Verweigerung erfolgt am.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            date_valid_to:
              type: string
              description: Verweigerung gültig bis.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            messageText:
              type: string
              description: >- 
                Meldungstext aus OSPlus Antwort. 
                Hier werden auch Fehler dokumentiert und an den Aufrufer zurückgegeben.
              example: 'MGK16340N010 - Der Prozess wurde erfolgreich ausgefuehrt.'
    OccurenceRequest:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
    OccurenceResponse:
      type: object
      required:
      - data
      - links
      properties:
        data:
          $ref: '#/components/schemas/Occurence'
        links:
          type: object
          properties:
            self:
              type: string
              description: Link zu dieser Ressourcenabfrage
      example:
        data:
          - type: occurences
            id: '43525748'
            attributes:
              date: '2020-02-02T14:25:00.000+02:00'
              document_type: '0001'
        links:
          self: 'http://api.lbbw.de/customer/disclosure-service/occurences'
    Occurence:
      type: object
      description: Datenmodell Offenlegungspflicht-erfolgt.
      required:
      - id
      - type
      - attributes
      properties:
        id:
          type: string
          description: Eindeutiger Schluessel - customerId
          example: '43525748'
        type:
          type: string
          description: Objekt Type
          enum:
            - occurences
          example: occurences
        attributes:
          type: object
          required:
          - date
          - document_type
          properties:
            date:
              type: string
              description: Offenlegung erfolgt am.
              example: '2019-04-12T14:25:00.000+02:00'
              format: date-time
            document_type:
              description: Unterlagen Art wie im KWG18_UNTERL_DEF_ANLEGEN beschrieben.
              type: string
              enum: ['0001','0002','0003','0004','0005','0006','0007','0008','0009','0010','0011','0012','0013','0014','0015','0016','0017','0018','0019','0020','0021','0022','0023','0024','0025','0026','0027']
              example: '0001'
    CustomerId:
      type: string
      maxLength: 10
      pattern: '\d{1,10}'
      example: '43525748'
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'
    JsonApiError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
    # HealthCheck analog zu SpringBoot
    HealthCheckOkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - UP
        components:
          type: object
    HealthCheckErrorResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - OUT_OF_SERVICE
        components:
          type: object
  securitySchemes:
    EsbAuthorization:
      type: http
      scheme: basic
    appId:
      type: apiKey
      in: header
      name: x-app-id
      description: Applikationskuerzel zum FIA-User (wird zur Zuordnung des Client benutzt)
